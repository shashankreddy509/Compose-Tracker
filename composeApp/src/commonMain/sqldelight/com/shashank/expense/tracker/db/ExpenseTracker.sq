CREATE TABLE Expense (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    amount REAL NOT NULL CHECK (amount >= 0),
    description TEXT NOT NULL,
    categoryId INTEGER NOT NULL,
    date INTEGER NOT NULL,
    type TEXT NOT NULL CHECK (type IN ('INCOME', 'EXPENSE')),
    paymentMethod TEXT CHECK (paymentMethod IN ('CASH', 'CREDIT_CARD', 'DEBIT_CARD', 'BANK_TRANSFER', 'UPI', 'OTHER')),
    location TEXT,
    receiptImageUrl TEXT,
    FOREIGN KEY (categoryId) REFERENCES Category(id) ON DELETE CASCADE,
    CHECK (length(description) > 0)
);

CREATE INDEX expense_category_idx ON Expense(categoryId);
CREATE INDEX expense_date_idx ON Expense(date);
CREATE INDEX expense_type_idx ON Expense(type);

CREATE TABLE Category (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL UNIQUE,
    icon TEXT NOT NULL,
    color TEXT NOT NULL,
    CHECK (length(name) > 0)
);

CREATE TABLE Budget (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    categoryId INTEGER NOT NULL,
    amount REAL NOT NULL CHECK (amount > 0),
    startDate INTEGER NOT NULL,
    endDate INTEGER NOT NULL,
    FOREIGN KEY (categoryId) REFERENCES Category(id) ON DELETE CASCADE,
    CHECK (endDate > startDate)
);

CREATE INDEX budget_category_idx ON Budget(categoryId);
CREATE INDEX budget_date_idx ON Budget(startDate, endDate);

-- Expense queries
expenseSelectAll:
SELECT *
FROM Expense
ORDER BY date DESC;

expenseSelectByCategory:
SELECT *
FROM Expense
WHERE categoryId = ?
ORDER BY date DESC;

expenseSelectByDateRange:
SELECT *
FROM Expense
WHERE date BETWEEN ? AND ?
ORDER BY date DESC;

expenseSelectById:
SELECT *
FROM Expense
WHERE id = ?;

expenseInsert:
INSERT INTO Expense (amount, description, categoryId, date, type, paymentMethod, location, receiptImageUrl)
VALUES (?, ?, ?, ?, ?, ?, ?, ?);

expenseUpdate:
UPDATE Expense
SET amount = ?, description = ?, categoryId = ?, date = ?, type = ?, paymentMethod = ?, location = ?, receiptImageUrl = ?
WHERE id = ?;

expenseDelete:
DELETE FROM Expense
WHERE id = ?;

-- Category queries
categorySelectAll:
SELECT *
FROM Category
ORDER BY name;

categorySelectById:
SELECT *
FROM Category
WHERE id = ?;

categoryInsert:
INSERT INTO Category (name, icon, color)
VALUES (?, ?, ?);

categoryUpdate:
UPDATE Category
SET name = ?, icon = ?, color = ?
WHERE id = ?;

categoryDelete:
DELETE FROM Category
WHERE id = ?;

-- Budget queries
budgetSelectAll:
SELECT *
FROM Budget
ORDER BY startDate DESC;

budgetSelectById:
SELECT *
FROM Budget
WHERE id = ?;

budgetSelectByCategory:
SELECT *
FROM Budget
WHERE categoryId = ?
ORDER BY startDate DESC;

budgetInsert:
INSERT INTO Budget (categoryId, amount, startDate, endDate)
VALUES (?, ?, ?, ?);

budgetUpdate:
UPDATE Budget
SET categoryId = ?, amount = ?, startDate = ?, endDate = ?
WHERE id = ?;

budgetDelete:
DELETE FROM Budget
WHERE id = ?;

-- Report queries
getMonthlyReport:
SELECT 
    strftime('%m', datetime(e.date / 1000, 'unixepoch')) AS month,
    strftime('%Y', datetime(e.date / 1000, 'unixepoch')) AS year,
    SUM(CASE WHEN e.type = 'INCOME' THEN e.amount ELSE 0 END) AS income_total,
    SUM(CASE WHEN e.type = 'EXPENSE' THEN e.amount ELSE 0 END) AS expense_total,
    e.categoryId,
    c.name AS category_name,
    c.icon AS category_icon,
    c.color AS category_color,
    SUM(CASE WHEN e.type = 'EXPENSE' THEN e.amount ELSE 0 END) AS category_amount
FROM Expense e
JOIN Category c ON e.categoryId = c.id
WHERE strftime('%Y-%m', datetime(e.date / 1000, 'unixepoch')) = ?
GROUP BY e.categoryId
ORDER BY category_amount DESC; 