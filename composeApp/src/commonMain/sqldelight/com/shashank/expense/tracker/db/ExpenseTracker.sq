CREATE TABLE Category (
    id TEXT NOT NULL PRIMARY KEY,
    name TEXT NOT NULL,
    icon TEXT NOT NULL,
    color TEXT NOT NULL
);

CREATE TABLE Account (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    balance REAL NOT NULL,
    type TEXT NOT NULL,
    currency TEXT NOT NULL,
    CHECK (length(name) > 0)
);

CREATE TABLE Expense (
    id TEXT NOT NULL PRIMARY KEY,
    amount REAL NOT NULL CHECK (amount > 0),
    description TEXT NOT NULL,
    category TEXT NOT NULL,
    date INTEGER NOT NULL,
    type TEXT NOT NULL CHECK (type IN ('INCOME', 'EXPENSE')),
    paymentMethod TEXT NOT NULL,
    accountId INTEGER,
    receiptUrl TEXT,
    FOREIGN KEY (accountId) REFERENCES Account(id) ON DELETE SET NULL
);

CREATE TABLE Budget (
    id TEXT NOT NULL PRIMARY KEY,
    amount REAL NOT NULL CHECK (amount > 0),
    spent REAL NOT NULL DEFAULT 0,
    remaining REAL NOT NULL,
    category TEXT NOT NULL,
    startDate INTEGER NOT NULL,
    endDate INTEGER NOT NULL,
    CHECK (endDate > startDate)
);

CREATE TABLE Goal (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name TEXT NOT NULL,
    targetAmount REAL NOT NULL,
    currentAmount REAL NOT NULL,
    deadline INTEGER NOT NULL,
    categoryId INTEGER NOT NULL,
    FOREIGN KEY (categoryId) REFERENCES Category(id) ON DELETE CASCADE,
    CHECK (length(name) > 0),
    CHECK (targetAmount > 0),
    CHECK (currentAmount >= 0),
    CHECK (deadline > 0)
);

-- Indexes
CREATE INDEX expense_category_idx ON Expense(category);
CREATE INDEX expense_date_idx ON Expense(date);
CREATE INDEX expense_type_idx ON Expense(type);
CREATE INDEX expense_account_idx ON Expense(accountId);
CREATE INDEX budget_category_idx ON Budget(category);
CREATE INDEX budget_date_idx ON Budget(startDate, endDate);
CREATE INDEX goal_category_idx ON Goal(categoryId);

-- Expense queries
selectAllExpenses:
SELECT *
FROM Expense
ORDER BY date DESC;

selectExpenseById:
SELECT *
FROM Expense
WHERE id = ?;

selectExpensesByCategory:
SELECT *
FROM Expense
WHERE category = ?
ORDER BY date DESC;

selectExpensesByDateRange:
SELECT *
FROM Expense
WHERE date BETWEEN ? AND ?
ORDER BY date DESC;

insertExpense:
INSERT INTO Expense(id, amount, description, category, date, type, paymentMethod, accountId, receiptUrl)
VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?);

updateExpense:
UPDATE Expense
SET amount = ?, description = ?, category = ?, date = ?, type = ?, paymentMethod = ?, accountId = ?, receiptUrl = ?
WHERE id = ?;

deleteExpense:
DELETE FROM Expense
WHERE id = ?;

-- Category queries
selectAllCategories:
SELECT *
FROM Category
ORDER BY name ASC;

selectCategoryById:
SELECT *
FROM Category
WHERE id = ?;

insertCategory:
INSERT INTO Category(id, name, icon, color)
VALUES (?, ?, ?, ?);

updateCategory:
UPDATE Category
SET name = ?, icon = ?, color = ?
WHERE id = ?;

deleteCategory:
DELETE FROM Category
WHERE id = ?;

-- Account queries
accountSelectAll:
SELECT *
FROM Account
ORDER BY name;

accountSelectById:
SELECT *
FROM Account
WHERE id = ?;

accountInsert:
INSERT INTO Account (name, balance, type, currency)
VALUES (?, ?, ?, ?);

accountUpdate:
UPDATE Account
SET name = ?, balance = ?, type = ?, currency = ?
WHERE id = ?;

accountDelete:
DELETE FROM Account
WHERE id = ?;

-- Budget queries
selectAllBudgets:
SELECT *
FROM Budget
ORDER BY startDate DESC;

selectBudgetById:
SELECT *
FROM Budget
WHERE id = ?;

selectBudgetsByCategory:
SELECT *
FROM Budget
WHERE category = ?
ORDER BY startDate DESC;

insertBudget:
INSERT INTO Budget(id, amount, spent, remaining, category, startDate, endDate)
VALUES (?, ?, ?, ?, ?, ?, ?);

updateBudget:
UPDATE Budget
SET amount = ?, spent = ?, remaining = ?, category = ?, startDate = ?, endDate = ?
WHERE id = ?;

deleteBudget:
DELETE FROM Budget
WHERE id = ?;

-- Goal queries
goalSelectAll:
SELECT *
FROM Goal
ORDER BY deadline;

goalSelectById:
SELECT *
FROM Goal
WHERE id = ?;

goalSelectByCategory:
SELECT *
FROM Goal
WHERE categoryId = ?
ORDER BY deadline;

goalInsert:
INSERT INTO Goal (name, targetAmount, currentAmount, deadline, categoryId)
VALUES (?, ?, ?, ?, ?);

goalUpdate:
UPDATE Goal
SET name = ?, targetAmount = ?, currentAmount = ?, deadline = ?, categoryId = ?
WHERE id = ?;

goalDelete:
DELETE FROM Goal
WHERE id = ?;

-- Report queries
getMonthlyReport:
SELECT 
    strftime('%m', datetime(e.date / 1000, 'unixepoch')) AS month,
    strftime('%Y', datetime(e.date / 1000, 'unixepoch')) AS year,
    SUM(CASE WHEN e.type = 'INCOME' THEN e.amount ELSE 0 END) AS income_total,
    SUM(CASE WHEN e.type = 'EXPENSE' THEN e.amount ELSE 0 END) AS expense_total,
    e.category,
    c.name AS category_name,
    c.icon AS category_icon,
    c.color AS category_color,
    SUM(CASE WHEN e.type = 'EXPENSE' THEN e.amount ELSE 0 END) AS category_amount
FROM Expense e
JOIN Category c ON e.category = c.id
WHERE strftime('%Y-%m', datetime(e.date / 1000, 'unixepoch')) = ?
GROUP BY e.category
ORDER BY category_amount DESC; 